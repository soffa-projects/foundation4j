spring.application.name: ${app.name}

spring.main.banner-mode: off

logging.level:
  ROOT: ${ROOT_LOG_LEVEL:WARN}
  io.leangen: ERROR
  ext.springboot: WARN
  org.jobrunr: WARN
  org.springframework: ${SPRING_LOG_LEVEL:WARN}
  liquibase: ERROR
  dev.soffa: ${PLATFORM_LOG_LEVEL:INFO}
  foundation: ${PLATFORM_LOG_LEVEL:INFO}
  app: ${LOG_LEVEL:INFO}
  service: ${LOG_LEVEL:INFO}
  org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: OFF

spring.profiles.group:
  production: ${environments.production.include:default}
  staging: ${environments.staging.include:default}
  qa: ${environments.qa.include:default}
  uat: ${environments.uat.include:default}
  dev: ${environments.dev.include:default}
  integration: ${environments.integration.include:default}
  local: ${environments.local.include:default}



spring.output.ansi.enabled: always


server.compression.enabled: true
server.forward-headers-strategy: NATIVE
server.port: ${PORT:8080}


management.endpoints.web.exposure.include: info,health,prometheus,metrics,refresh

management.endpoint.health.enabled: true
management.endpoint.health.show-components: when-authorized
management.endpoint.health.show-details: when-authorized
management.endpoints.web.base-path: /

management.metrics.export.simple.enabled: true
management.health.diskspace.enabled: true
management.health.db.enabled: true
management.health.rabbit.enabled: true

spring.groovy.template.check-template-location: false

springdoc:
  api-docs.enabled: true
  show-actuator: false
  paths-to-exclude: graphiql, /graphiql, error, /error, /oauth/*, /user/auth, /healthz
  show-login-endpoint: false
  swagger-ui:
    enabled: ${app.swagger-ui.enabled:true}
    operations-sorter: alpha
    tags-sorter: alpha

app.public-url: ${PUBLIC_URL:http://localhost:${PORT}}

app.consul:
  enabled: false

app.errors_tracking:
  provider: ${SENTRY_PROVIDER:none}

app.data.timeseries:
  enabled: ${TIMESERIES_ENABLED:false}
  provider: ${TIMESERIES_PROVIDER:none}

spring.cloud.consul:
  enabled: false
  discovery.enabled: false

app.hazelcast:
  servers: ${HAZELCAST_SERVERS:embedded}

spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
management.endpoint.health:
  group.liveness:
    include: livenessstate,cacheCheck
  probes.enabled: true

app.redoc.enabled: true

spring.jackson:
  default-property-inclusion: non_empty
  property-naming-strategy: ${jackson.property-naming-strategy:LOWER_CAMEL_CASE}
  serialization:
    write-dates-as-timestamps: true

spring.cloud.vault.enabled: false
spring.cloud.vault.kv.enabled: false

spring.jpa:
  open-in-view: false
  show-sql: false
  properties.hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect
    jdbc.batch_size: 500
  hibernate:
    ddl-auto: none
    naming.physical-strategy: dev.soffa.foundation.data.spring.CustomPhysicalNamingStrategy

spring.liquibase.enabled: false

app.openapi:
  enabled: true
  access: permitAll
  title: ${spring.application.name}
  servers: ${OPENAPI_SERVERS:}

app.health.root.enabled: false

org.jobrunr:
  background-job-server.enabled: ${app.jobs.enabled:false}
  dashboard.enabled: ${app.jobs.enabled:false}
  database.skip_create: true
  dashboard.port: 8000

junit.jupiter.execution.parallel.enabled: true

spring.sleuth.web.skipPattern: (^cleanup.*|.+favicon.*)

spring.zipkin:
  enabled: ${app.zikin.enabled:${ZIPKIN_ENABLED:false}}
  base-url: ${app.ziking.url:${ZIPKIN_BASE_URL:localhost:9411}}

spring.sleuth.web.client.enabled: ${ZIPKIN_ENABLED:true}

spring.webflux.static-path-pattern: /assets/**

server.servlet.contextPath: ${app.context-path:${CONTEXT_PATH:}}


---
spring.config.activate.on-profile: test

management.health.vault.enabled: false
management.endpoint.health.show-components: always
management.endpoint.health.show-details: always

logging.level:
  dev.soffa: DEBUG
  dev.bantu: DEBUG

---
spring.config.activate.on-profile: production,prd,prod
spring.config.import:
  - classpath:application-json-logs.yml
